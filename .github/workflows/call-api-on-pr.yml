name: Call API
on:
  pull_request:
    types: [opened]
permissions:
  pull-requests: write
jobs:
  call-api:
    name: Call API - Job
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get file content
        id: get_file_content
        run: |
          files=$(git diff --name-only ${{ github.event.before }} ${{ github.after }})
          content=$(cat $files | head -n 1)
          echo "::set-output name=content::$content"
        
      - name: Call API
        id: call_api
        run: |
          response=$(curl -X GET -H "Content-Type: application/yaml" https://www.boredapi.com/api/activity)
          http_code=$(echo "$response" | awk -F 'HTTP-CODE:' '{print $2}')
          response_body=$(echo "$response" | awk -F 'HTTP-CODE:' '{print $1}')
          if [ $http_code -eq 200 ]; then
            echo "::set-output name=response::$response"
          else
            echo "::set-output name=response::API request failed with HTTP status code $http_code"
          fi
      
      - name: Comment on PR
        if: ${{ always() }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = '${{ steps.call-api.outputs.response }}';
            const content = '${{ steps.get-file-content.outputs.content }}';
            if (response) {
              const responseBody = JSON.parse(response);
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `The file content is: ${content} and the activity is: ${responseBody.activity}`
              });
            } else {
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `The API response is empty.`
              });
            }
